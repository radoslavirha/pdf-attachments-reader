name: Release Drafter

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  draft_release:
    permissions:
      contents: write
      pull-requests: write
      checks: write
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.drafter.outputs.id }}
      tag_name: ${{ steps.drafter.outputs.tag_name }}
      upload_url: ${{ steps.drafter.outputs.upload_url }}
    steps:
      - uses: release-drafter/release-drafter@v5
        id: drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build for ${{ matrix.os }}
    needs: draft_release
    runs-on: ${{ matrix.os }}
    permissions: write-all
    strategy:
      matrix:
        include:
          - os: windows-latest
            app_build: pdf-extracter.exe
            asset_name: pdf-extracter-win-${{ needs.draft_release.outputs.tag_name }}.exe
            mime: application/zip
          - os: macos-latest
            app_build: pdf-extracter.dmg
            asset_name: pdf-extracter-mac-${{ needs.draft_release.outputs.tag_name }}.dmg
            mime: application/zip
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Build
        run: |
          pip3 install pyinstaller
          pip3 install -r requirements.txt
          pyinstaller --onefile --noconsole --clean --name pdf-extracter gui.py
      - name: Bundle .dmg
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install create-dmg
          mkdir -p dist/dmg
          rm -rf dist/dmg/*
          cp -r dist/pdf-extracter.app dist/dmg
          rm -rf dist/pdf-extracter.dmg
          create-dmg --app-drop-link 425 120 --no-internet-enable "dist/pdf-extracter.dmg" "dist/dmg/"
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft_release.outputs.upload_url }}
          asset_path: dist/${{ matrix.app_build }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: ${{ matrix.mime }}

  publish:
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - draft_release
      - build
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.draft_release.outputs.id }}
